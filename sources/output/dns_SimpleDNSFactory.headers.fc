;;
;; Header files for SimpleDNSFactory
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_create_address
slice __tact_create_address(int chain, int hash) inline;

;; __tact_compute_contract_address
slice __tact_compute_contract_address(int chain, cell code, cell data) inline;

;; __tact_my_balance
int __tact_my_balance() inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_context_get_sender
slice __tact_context_get_sender() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_set_code
cell __tact_dict_set_code(cell dict, int id, cell code) inline;

;; __tact_dict_get_code
cell __tact_dict_get_code(cell dict, int id) inline;

;; $Deploy$_load
(slice, ((int))) $Deploy$_load(slice sc_0) inline;

;; $DeployOk$_store
builder $DeployOk$_store(builder build_0, (int) v) inline;

;; $DeployOk$_store_cell
cell $DeployOk$_store_cell((int) v) inline;

;; $FactoryDeploy$_store
builder $FactoryDeploy$_store(builder build_0, (int, slice) v) inline;

;; $FactoryDeploy$_store_cell
cell $FactoryDeploy$_store_cell((int, slice) v) inline;

;; $SimpleDNSFactory$_store
builder $SimpleDNSFactory$_store(builder build_0, (int) v) inline;

;; $SimpleDNSFactory$_load
(slice, ((int))) $SimpleDNSFactory$_load(slice sc_0) inline;

;; $SimpleDNSContract$init$_store
builder $SimpleDNSContract$init$_store(builder build_0, (slice, int) v) inline;

;; $SimpleDNSFactory$_contract_init
(int) $SimpleDNSFactory$_contract_init() impure inline_ref;

;; $SimpleDNSFactory$_contract_load
(int) $SimpleDNSFactory$_contract_load() impure inline_ref;

;; $SimpleDNSFactory$_contract_store
() $SimpleDNSFactory$_contract_store((int) v) impure inline;

;; $global_contractAddress
slice $global_contractAddress((cell, cell) $s) impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $SimpleDNSContract$_init_child
(cell, cell) $SimpleDNSContract$_init_child(cell sys', slice $owner, int $seed) inline_ref;

;; $SendParameters$_constructor_bounce_to_value_mode_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_body(int bounce, slice to, int value, int mode, cell body) inline;

;; $SimpleDNSFactory$_fun_forward
((int), ()) $SimpleDNSFactory$_fun_forward((int) $self, slice $to, cell $body) impure inline_ref;

;; $SimpleDNSFactory$_fun_reply
((int), ()) $SimpleDNSFactory$_fun_reply((int) $self, cell $body) impure inline;

;; $SendParameters$_constructor_bounce_to_value_mode_code_data_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_bounce_to_value_mode_code_data_body(int bounce, slice to, int value, int mode, cell code, cell data, cell body) inline;

;; $FactoryDeploy$_constructor_queryId_cashback
((int, slice)) $FactoryDeploy$_constructor_queryId_cashback(int queryId, slice cashback) inline;

;; $DeployOk$_constructor_queryId
((int)) $DeployOk$_constructor_queryId(int queryId) inline;
